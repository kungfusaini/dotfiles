(self.webpackChunk=self.webpackChunk||[]).push([[9209],{17129:(e,t,n)=>{n.r(t),n.d(t,{Discord:()=>a});var a,r=n(74425),i=n(20182),s=n(72747),c=n(15716),l=n(94919),o=n(48425),p=n(86398),d=n(52296),m=n(72043),u=n(3479);!function(e){function t(e,t){const n="insert"===(0,p.H)(e),a=0===e.pos.start;if(!n||a)return e;const r=t.getCurrentTextMap().getPlainText(),i=(0,c.HD)(e.value)?e.value:o.$.renderToPlainText(e.value),s=r.slice(e.pos.start-1,e.pos.start);return{pos:{start:e.pos.start-1,end:e.pos.end},value:s+i}}async function n(){await(0,s.gw)(100)}e.transformInsertReplacement=t,e.page=(0,m.$W)({name:"discord",domain:r._4},[d.O$.generic((e=>({createReplacementService:e.experimentClient.isGateEnabled(i.K.DiscordExecComandReplacementService)?t=>l.BT.create(t,e.experimentClient,{focusElement:e.field}):void 0,onBeforeNextReplacementInBatch:e.experimentClient.isGateEnabled(i.K.DiscordDelayAfterReplacementInBatch)?n:void 0,transformReplacementBeforeApply:e.experimentClient.isGateEnabled(i.K.DiscordTransformInsertToReplace)?t:void 0}))),...u.k.defaultFieldRuleSet])}(a||(a={}))}}]);